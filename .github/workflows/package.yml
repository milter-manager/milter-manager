name: Package
on:
  - push
  - pull_request
jobs:
  source:
    name: Source
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y -V \
            ccache \
            curl \
            gtk-doc-tools \
            inkscape \
            intltool \
            libev-dev \
            poxml
          echo "/usr/lib/ccache" >> $GITHUB_PATH
          sudo gem install \
            fast_gettext \
            gio2 \
            rdtool \
            rttool
      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: source-ccache-${{ hashFiles('libmilter/**', 'milter/**', 'src/**', 'tool/**', 'test/**') }}
          restore-keys: source-ccache-
      - run: ./autogen.sh
      - run: mkdir -p .build
      - name: Configure
        run: |
          ../configure \
            --enable-gtk-doc
        working-directory: .build
      - run: make -j$(nproc)
        working-directory: .build
      - run: make distcheck
        working-directory: .build
      - run: mv .build/milter-manager-*.tar.gz ./
      - name: Show binding/ruby/test/ log
        if: failure()
        run: |
          cat .build/milter-manager-*/_build/sub/binding/ruby/test/test-suite.log || :
      - name: Show test/tool/ log
        if: failure()
        run: |
          cat .build/milter-manager-*/_build/sub/test/tool/test-suite.log || :
      - name: Show test/ log
        if: failure()
        run: |
          cat .build/milter-manager-*/_build/sub/test/test-suite.log || :

      # Artifact
      - uses: actions/upload-artifact@v4
        with:
          name: source
          path: milter-manager-*.tar.gz

      # Release
      - uses: actions/checkout@v4
        if: |
          startsWith(github.ref, 'refs/tags/')
        with:
          repository: milter-manager/milter-manager.github.io
          path: milter-manager.github.io
      - name: Extract release note
        if: |
          startsWith(github.ref, 'refs/tags/')
        run: |
          ruby \
            -e 'print("## milter manager "); \
                puts(ARGF.read.split(/^## /)[1].gsub(/ {.+?}/, ""))' \
            milter-manager.github.io/news/index.md > release-note.md
      - name: Upload to release
        uses: softprops/action-gh-release@v1
        if: |
          startsWith(github.ref, 'refs/tags/')
        with:
          body_path: release-note.md
          discussion_category_name: "Releases"
          files: |
            milter-manager-*.tar.gz

  build:
    name: Build
    needs: source
    strategy:
      fail-fast: false
      matrix:
        label:
          - CentOS 7
          - Debian GNU/Linux bullseye
          - Ubuntu Focal Fossa
          - Ubuntu Jammy Jellyfish
          - AlmaLinux 8
          - AlmaLinux 9
        include:
          - label: CentOS 7
            id: centos-7
            task-namespace: yum
            target: centos-7
            test-docker-image: centos:7
          - label: Debian GNU/Linux bullseye
            id: debian-bullseye
            task-namespace: apt
            target: debian-bullseye
            test-docker-image: debian:bullseye
          - label: Ubuntu Focal Fossa
            id: ubuntu-focal
            task-namespace: apt
            target: ubuntu-focal
            test-docker-image: ubuntu:focal
          - label: Ubuntu Jammy Jellyfish
            id: ubuntu-jammy
            task-namespace: apt
            target: ubuntu-jammy
            test-docker-image: ubuntu:jammy
          - label: AlmaLinux 8
            id: almalinux-8
            task-namespace: yum
            target: almalinux-8
            test-docker-image: almalinux:8
          - label: AlmaLinux 9
            id: almalinux-9
            task-namespace: yum
            target: almalinux-9
            test-docker-image: almalinux:9
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt -V install \
            devscripts \
            qemu-user-static \
            ruby
      - uses: actions/download-artifact@v3
        with:
          name: source
      - name: Update version
        if: |
          !startsWith(github.ref, 'refs/tags/') &&
          !startsWith(github.ref, 'refs/heads/maintenance/')
        run: |
          cd package
          rake version:update RELEASE_DATE=$(date +%Y-%m-%d)
      - name: Login to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: package/${{ matrix.task-namespace }}/build/${{ matrix.target }}/ccache
          key: package-${{ matrix.id }}-ccache-${{ hashFiles('libmilter/**', 'milter/**', 'src/**', 'tool/**', 'test/**') }}
          restore-keys: package-${{ matrix.id }}-ccache-
      - name: Build with Docker
        run: |
          cd package
          rake docker:pull || :
          rake ${{ matrix.task-namespace }}:build BUILD_DIR=build
        env:
          APT_TARGETS: ${{ matrix.target }}
          YUM_TARGETS: ${{ matrix.target }}
      - name: Push the built Docker image
        continue-on-error: true
        run: |
          cd package
          rake docker:push
        env:
          APT_TARGETS: ${{ matrix.target }}
          YUM_TARGETS: ${{ matrix.target }}

      # Artifact
      - uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.id }}
          path: package/${{ matrix.task-namespace }}/repositories/

      # Release
      - name: Create assets
        if: |
          startsWith(github.ref, 'refs/tags/')
        run: |
          tar czf ${{ matrix.id }}.tar.gz package/${{ matrix.task-namespace }}/repositories/
      - name: Upload to release
        uses: softprops/action-gh-release@v1
        if: |
          startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ matrix.id }}.tar.gz

  test:
    name: Test
    needs: build
    strategy:
      fail-fast: false
      matrix:
        label:
          - CentOS 7
          - Debian GNU/Linux bullseye
          - Ubuntu Focal Fossa
          - Ubuntu Jammy Jellyfish
          - AlmaLinux 8
          - AlmaLinux 9
        include:
          - label: CentOS 7
            id: centos-7
            task-namespace: yum
            target: centos-7
            test-docker-image: centos:7
          - label: Debian GNU/Linux bullseye
            id: debian-bullseye
            task-namespace: apt
            target: debian-bullseye
            test-docker-image: debian:bullseye
          - label: Ubuntu Focal Fossa
            id: ubuntu-focal
            task-namespace: apt
            target: ubuntu-focal
            test-docker-image: ubuntu:focal
          - label: Ubuntu Jammy Jellyfish
            id: ubuntu-jammy
            task-namespace: apt
            target: ubuntu-jammy
            test-docker-image: ubuntu:jammy
          - label: AlmaLinux 8
            id: almalinux-8
            task-namespace: yum
            target: almalinux-8
            test-docker-image: almalinux:8
          - label: AlmaLinux 9
            id: almalinux-9
            task-namespace: yum
            target: almalinux-9
            test-docker-image: almalinux:9
    runs-on: macos-12
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: package-${{ matrix.id }}
          path: package/${{ matrix.task-namespace }}/repositories
      - name: Run VM
        run: |
          vagrant up ${{ matrix.id }}
      - name: Run test
        run: |
          vagrant \
            ssh ${{ matrix.id }} \
            -- \
            /vagrant/package/${{ matrix.task-namespace }}/test.sh
